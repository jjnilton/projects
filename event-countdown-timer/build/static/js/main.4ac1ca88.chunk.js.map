{"version":3,"sources":["components/Timers.module.css","components/NewTimer.module.css","components/UI/Modal.module.css","components/NotificationStatus.module.css","App.module.css","components/Alert.module.css","components/NotificationRequest.module.css","store/timer-context.js","components/UI/Modal.jsx","components/Alert.jsx","components/NewTimer.jsx","components/NotificationRequest.jsx","components/NotificationStatus.jsx","components/Timer.jsx","components/Timers.jsx","App.js","store/TimerProvider.js","index.js"],"names":["module","exports","TimerContext","React","createContext","Backdrop","props","className","visible","classes","backdrop","disappear","onClick","backDropClick","Modal","ReactDOM","createPortal","document","getElementById","role","id","modal","children","audio","Audio","Alert","useContext","hideAlert","lastEvent","useState","setVisible","notification","useRef","dismissRef","handleDismissAlert","useCallback","Notification","permission","current","close","timeout","setTimeout","clearTimeout","useEffect","play","body","name","onclose","focus","alert","Date","dateTime","toLocaleString","undefined","dateStyle","timeStyle","ref","NewTimer","addTimer","timers","notificationModal","statusBar","nameError","setNameError","dateError","setDateError","sameDateError","setSameDateError","bringAttention","setBringAttention","success","setSuccess","nameRef","hasTried","handleInputFocus","join","onSubmit","event","preventDefault","formData","FormData","target","get","date","time","validName","trim","length","validDate","isNaN","find","timer","getTime","reset","htmlFor","type","placeholder","onFocus","tabIndex","autoComplete","error","attention","step","NotificationRequest","notificationEnabled","hideNotificationModal","enableNotification","notificationDenied","setNotificationDenied","requestPermission","then","NotificationStatus","hideStatusBar","showStatusBar","Timer","timeLeft","handleLastEvent","showAlert","deleteTimer","remainingTime","seconds","Math","floor","minutes","hours","days","pz","number","timeLeftString","info","month","year","day","hour","minute","countdown","ActiveTimers","clearExpired","activeTimers","setActiveTimers","getTimeLeft","timerDate","activeTimersArray","sort","a","b","filter","expiredTimers","reverse","map","setInterval","clearInterval","active","expired","disabled","App","isLoaded","style","app","Timers","href","TimerProvider","setTimers","setAlert","setLastEvent","setNotificationModal","setNotificationEnabled","setIsLoaded","setStatusBar","localStorage","getItem","JSON","parse","timerContext","prevTimers","updatedTimers","setItem","stringify","eventId","timerId","Provider","value","render"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,uBAAuB,OAAS,uBAAuB,MAAQ,sBAAsB,KAAO,qBAAqB,KAAO,qBAAqB,KAAO,qBAAqB,UAAY,0BAA0B,QAAU,wBAAwB,UAAY,4B,gBCAxTD,EAAOC,QAAU,CAAC,YAAY,4BAA4B,QAAU,0BAA0B,MAAQ,wBAAwB,UAAY,8B,gBCA1ID,EAAOC,QAAU,CAAC,SAAW,wBAAwB,MAAQ,qBAAqB,UAAY,2B,qBCA9FD,EAAOC,QAAU,CAAC,sBAAsB,gDAAgD,OAAS,mCAAmC,UAAY,wC,gBCAhJD,EAAOC,QAAU,CAAC,IAAM,mB,gBCAxBD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,uBAAuB,oD,gICG1BC,EAFMC,IAAMC,gB,uBCGrBC,EAAW,SAACC,GAChB,OACE,qBACEC,UACGD,EAAME,QAEHC,IAAQC,SAFZ,UACOD,IAAQC,SADf,YAC2BD,IAAQE,WAGrCC,QAASN,EAAMO,iBAmCNC,EA9BD,SAACR,GACb,OACE,qCACGS,IAASC,aACR,cAAC,EAAD,CACEH,cAAeP,EAAMO,cACrBL,QAASF,EAAME,UAEjBS,SAASC,eAAe,UAEzBH,IAASC,aACR,qBACEG,KAAK,SACLC,GAAG,QACH,kBAAgB,cAChB,aAAW,OACXb,UACGD,EAAME,QAEHC,IAAQY,MAFZ,UACOZ,IAAQY,MADf,YACwBZ,IAAQE,WAPpC,SAWGL,EAAMgB,WAETL,SAASC,eAAe,c,iBC/B1BK,EAAQ,IAAIC,MAAM,eAyDTC,EAvDD,WACZ,MAAiCC,qBAAWxB,GAApCyB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,UACnB,EAA8BC,oBAAS,GAAvC,mBAAOrB,EAAP,KAAgBsB,EAAhB,KACMC,EAAeC,mBACfC,EAAaD,mBAEbE,EAAqBC,uBAAY,WACL,YAA5BC,aAAaC,YACfN,EAAaO,QAAQC,QAEvBT,GAAW,GACX,IAAMU,EAAUC,YAAW,WACzBC,aAAaF,GACbb,MACC,OACF,CAACA,IAoBJ,OAlBAgB,qBAAU,WACRpB,EAAMqB,OAC0B,YAA5BR,aAAaC,aACfN,EAAaO,QAAU,IAAIF,aAAa,wBAAyB,CAC/DS,KAAK,SAAD,OAAWjB,EAAUkB,KAArB,iBAENf,EAAaO,QAAQS,QAAU,WAC7Bb,QAGH,CAACN,EAAWM,IAEfS,qBAAU,WACRF,YAAW,WACTR,EAAWK,QAAQU,UAClB,MAIH,cAAC,EAAD,CAAOnC,cAAeqB,EAAoB1B,QAASA,EAAnD,SACE,sBAAKD,UAAWE,IAAQwC,MAAxB,UACE,oDACA,uCACQ,+BAAOrB,EAAUkB,OADzB,eACkD,IAChD,+BACG,IAAII,KAAKtB,EAAUuB,UAAUC,oBAAeC,EAAW,CACtDC,UAAW,SACXC,UAAW,YALjB,OAUA,wBAAQ3C,QAASsB,EAAoBsB,IAAKvB,EAA1C,2B,gBC2GOwB,EArKE,WACf,MACE/B,qBAAWxB,GADLwD,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAAQV,EAA1B,EAA0BA,MAAOW,EAAjC,EAAiCA,kBAAmBC,EAApD,EAAoDA,UAEpD,EAAkChC,oBAAS,GAA3C,mBAAOiC,EAAP,KAAkBC,EAAlB,KACA,EAAkClC,oBAAS,GAA3C,mBAAOmC,EAAP,KAAkBC,EAAlB,KACA,EAA0CpC,oBAAS,GAAnD,mBAAOqC,EAAP,KAAsBC,EAAtB,KACA,EAA4CtC,oBAAS,GAArD,mBAAOuC,EAAP,KAAuBC,EAAvB,KACA,EAA8BxC,oBAAS,GAAvC,mBAAOyC,EAAP,KAAgBC,EAAhB,KACMC,EAAUxC,mBACVyC,EAAWzC,mBA4DX0C,EAAmB,WACvBX,GAAa,GACbE,GAAa,GACbE,GAAiB,IAWnB,OARAxB,qBAAU,WACHM,GAAUW,GACbnB,YAAW,WACT+B,EAAQlC,QAAQU,UACf,KAEJ,CAACC,EAAOW,EAAmBC,IAG5B,sBACEtD,UAAW,CACTE,IAAQ,aACR6D,EAAU7D,IAAQ6D,aAAUjB,GAC5BsB,KAAK,KAJT,UAME,wDACA,uBAAM7B,KAAK,YAAY8B,SAhFN,SAACC,GACpBA,EAAMC,iBAEN,IAAMC,EAAW,IAAIC,SAASH,EAAMI,QAC9BnC,EAAOiC,EAASG,IAAI,QACpBC,EAAOJ,EAASG,IAAI,QACtBE,EAAOL,EAASG,IAAI,QAEpBG,GAAY,EACZvC,EAAKwC,OAAOC,OAAS,GAAKzC,EAAKwC,OAAOC,OAAS,GACjDF,GAAY,EAEZtB,GAAa,IAGXqB,EAAKE,OAAOC,OAAS,GAAKH,EAAKE,OAAS,KAC1CF,EAAO,SAGT,IAAMjC,EAAW,UAAGgC,EAAH,YAAWC,GAAOE,OAE/BE,GAAY,GAEXC,MAAM,IAAIvC,KAAKC,KAAc,IAAID,KAAKC,GAAY,IAAID,KAC3CS,EAAO+B,MAAK,SAACC,GACzB,OACE,IAAIzC,KAAKyC,EAAMxC,UAAUyC,YAAc,IAAI1C,KAAKC,GAAUyC,aAI5DzB,GAAiB,GAEjBqB,GAAY,EAGdvB,GAAa,GAGXoB,GAAaG,GACf9B,EAAS,CAAEZ,OAAMK,aACjB0B,EAAMI,OAAOY,QACbrB,EAAQlC,QAAQU,QAChBuB,GAAW,GACX9B,YAAW,WACT8B,GAAW,KACV,MAEEE,EAASnC,SAGZ+B,GAAkB,GAClB5B,YAAW,WACT4B,GAAkB,KACjB,MALHI,EAASnC,SAAU,GAgCrB,UACE,uBAAOwD,QAAQ,OAAf,kBACA,uBACE1E,GAAG,OACH0B,KAAK,OACLiD,KAAK,OACLC,YAAY,oBACZC,QAASvB,EACTwB,SAAUjD,GAASW,EAAoB,KAAO,IAC9CJ,IAAKgB,EACL2B,aAAa,QAEdrC,GACC,qBACEvD,UAAW,CACTE,IAAQ2F,MACRhC,EAAiB3D,IAAQ4F,eAAYhD,GACrCsB,KAAK,KAJT,+CASF,gCACE,uBAAOmB,QAAQ,OAAf,kBACA,uBACE1E,GAAG,OACH0B,KAAK,OACLiD,KAAK,OACLE,QAASvB,EACTwB,SAAUjD,GAASW,EAAoB,KAAO,SAGlD,gCACE,uBAAOkC,QAAQ,OAAf,kBACA,uBACE1E,GAAG,OACH0B,KAAK,OACLiD,KAAK,OACLE,QAASvB,EACTwB,SAAUjD,GAASW,EAAoB,KAAO,IAC9C0C,KAAK,UAGRtC,GACC,qBACEzD,UAAW,CACTE,IAAQ2F,MACRhC,EAAiB3D,IAAQ4F,eAAYhD,GACrCsB,KAAK,KAJT,+CASDT,GACC,qBACE3D,UAAW,CACTE,IAAQ2F,MACRhC,EAAiB3D,IAAQ4F,eAAYhD,GACrCsB,KAAK,KAJT,gEASF,wBACEoB,KAAK,SACLG,SAAUjD,GAASW,EAAoB,KAAO,IAFhD,SAIGU,EAAU,QAAU,iB,iBC7EhBiC,EAhFa,WAC1B,MACE7E,qBAAWxB,GADLsG,EAAR,EAAQA,oBAAqBC,EAA7B,EAA6BA,sBAAuBC,EAApD,EAAoDA,mBAGpD,EAA8B7E,oBAAS,GAAvC,mBAAOrB,EAAP,KAAgBsB,EAAhB,KACA,EAAoDD,oBAAS,GAA7D,mBAAO8E,EAAP,KAA2BC,EAA3B,KAEM3E,EAAaD,mBA0BnB,OANAW,qBAAU,WACRF,YAAW,WACTR,EAAWK,QAAQU,UAClB,MAIH,cAAC,EAAD,CAAOxC,QAASA,EAAhB,SACE,sBAAKD,UAAWE,IAAQ,wBAAxB,UACE,sDACE+F,GAAwBG,EASxB,GARA,qCACE,yGAIA,wEAKFH,GAAuBG,EACvB,qCACE,6EAAoD,IACpD,iIAMF,GAEDH,GACC,qCACE,wEACA,oGAKFA,GAAwBG,EAGxB,GAFA,wBAAQ/F,QA3DgB,WAC9BwB,aAAayE,oBAAoBC,MAAK,SAACzE,GAClB,YAAfA,GACFqE,IAEiB,WAAfrE,GACFuE,GAAsB,OAqDpB,oBAIF,wBAAQhG,QApDwB,WACpCkB,GAAW,GACXW,YAAW,WACTgE,MACC,MAgDiDjD,IAAKvB,EAArD,2B,iBC9BO8E,EA3CY,WACzB,MACErF,qBAAWxB,GADLwG,EAAR,EAAQA,mBAAoBM,EAA5B,EAA4BA,cAAeC,EAA3C,EAA2CA,cAE3C,EAA8BpF,oBAAS,GAAvC,mBAAOrB,EAAP,KAAgBsB,EAAhB,KAyBA,OACEmF,GACE,sBACE1G,UAAS,UAAKE,IAAQ,uBAAb,YACND,OAA8B6C,EAApB5C,IAAQE,WAFvB,UAKE,8DACA,wBAAQC,QA/BkB,WAC9BwB,aAAayE,oBAAoBC,MAAK,SAACzE,GAClB,YAAfA,IACFP,GAAW,GACXW,YAAW,WACTiE,MACC,MAEc,WAAfrE,GACFY,MACE,4EAqBF,oBACA,wBAAQrC,QAhB0B,WACtCkB,GAAW,GACXW,YAAW,WACTuE,MACC,MAYC,yB,uBCwDOE,EA7FD,SAAC5G,GACb,IAAM6G,EAAW7G,EAAM6G,SACvB,EAA8EzF,qBAAWxB,GAAjFkH,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,UAAWC,EAApC,EAAoCA,YAAa1D,EAAjD,EAAiDA,kBAAmBX,EAApE,EAAoEA,MAEpE,EAA8BpB,oBAAS,GAAvC,mBAAOrB,EAAP,KAAgBsB,EAAhB,KAEIyF,EAAgBJ,EAChBK,EAAUC,KAAKC,MAAMH,EAAgB,IACzCA,GAAgC,GAChC,IAAII,EAAUF,KAAKC,MAAMH,EAAgB,IACzCA,GAAgC,GAChC,IAAIK,EAAQH,KAAKC,MAAMH,EAAgB,IACvCA,GAAgC,GAChC,IAAIM,EAAOJ,KAAKC,MAAMH,GAGhBO,EAAK,SAACC,GACV,OAAIA,EAAS,GACL,IAAN,OAAWA,GAENA,GAGHC,EACJ,qCACGH,EAAO,EACN,qCACE,+BAAOC,EAAGD,KADZ,SACgC,OAGhC,GAEDD,EAAQ,EACP,qCACE,+BAAOE,EAAGF,KADZ,UACkC,OAGlC,GAEDD,EAAU,EACT,qCACE,+BAAOG,EAAGH,KADZ,YACsC,OAGtC,GAEDH,GAAW,EACV,qCACE,+BAAOM,EAAGN,KADZ,cAIA,MAKN,GAAIL,EAAW,EACb,IAAI3E,EAAUC,YAAW,WACvBC,aAAaF,GACb4E,EAAgB9G,GAChB+G,MACC,KAUL,OACE,oBAAI9G,UAAYC,OAA8B6C,EAApB5C,IAAQE,UAAlC,SACE,sBAAKJ,UAAWE,IAAQoE,MAAxB,UACE,sBAAKtE,UAAWE,IAAQwH,KAAxB,UACE,qBAAK1H,UAAWE,IAAQqC,KAAxB,SAA+BxC,EAAMwC,OACrC,qBAAKvC,UAAWE,IAAQ0E,KAAxB,SACG,IAAIjC,KAAK5C,EAAM6C,UAAUC,oBAAeC,EAAW,CAClD6E,MAAO,QACPC,KAAM,UACNC,IAAK,UACLC,KAAM,UACNC,OAAQ,iBAId,wBAAQ1H,QAtBY,WACxBkB,GAAW,GACXW,YAAW,WACT6E,EAAYhH,EAAMc,MACjB,MAkBqC8E,SAAUjD,GAASW,EAAoB,KAAO,IAAlF,oBACA,qBAAKrD,UAAWE,IAAQ8H,UAAxB,SAAoCP,UC4B7BQ,EAlHM,WACnB,MAA2D9G,qBAAWxB,GAA9DyD,EAAR,EAAQA,OAAQ8E,EAAhB,EAAgBA,aAAc7E,EAA9B,EAA8BA,kBAAmBX,EAAjD,EAAiDA,MACjD,EAAwCpB,qBAAxC,mBAAO6G,EAAP,KAAqBC,EAArB,KACA,EAA8B9G,oBAAS,GAAvC,mBAAOrB,EAAP,KAAgBsB,EAAhB,KAEM8G,EAAc,SAACC,GACnB,OAAOpB,KAAKC,OAAO,IAAIxE,KAAK2F,GAAa,IAAI3F,MAAU,MAGnD4F,EAAoB,YAAInF,GAC3BoF,MAAK,SAACC,EAAGC,GAAJ,OAAW,IAAI/F,KAAK8F,EAAE7F,UAAY,IAAID,KAAK+F,EAAE9F,WAAa,EAAI,KACnE+F,QAAO,SAACvD,GAAD,OAAWiD,EAAYjD,EAAMxC,UAAY,KAM7CgG,EAJqBxF,EAAOuF,QAChC,SAACvD,GAAD,OAAWiD,EAAYjD,EAAMxC,UAAY,KAGFiG,UAAUC,KAAI,SAAC1D,GACtD,OACE,+BACE,qBAAKpF,UAAWE,IAAQqC,KAAxB,SAA+B6C,EAAM7C,OACrC,qBAAKvC,UAAWE,IAAQ0E,KAAxB,SACG,IAAIjC,KAAKyC,EAAMxC,UAAUC,oBAAeC,EAAW,CAClDC,UAAW,OACXC,UAAW,cALRoC,EAAMvE,OAanBuB,qBAAU,WACRgG,EACEG,EAAkBO,KAAI,SAAC1D,GACrB,OACE,cAAC,EAAD,CAEEvE,GAAIuE,EAAMvE,GACV0B,KAAM6C,EAAM7C,KACZK,SAAUwC,EAAMxC,SAChBgE,SAAUyB,EAAYjD,EAAMxC,WAJvBwC,EAAMvE,UAUlB,CAACuC,IAGJhB,qBAAU,WACR,IAAIgD,EAkBJ,OAjBM+C,GAAgBA,EAAanD,OAAS,IAC1CI,EAAQ2D,aAAY,WAClBX,EACEG,EAAkBO,KAAI,SAAC1D,GACrB,OACE,cAAC,EAAD,CAEEvE,GAAIuE,EAAMvE,GACV0B,KAAM6C,EAAM7C,KACZK,SAAUwC,EAAMxC,SAChBgE,SAAUyB,EAAYjD,EAAMxC,WAJvBwC,EAAMvE,UASlB,MAEE,WACLmI,cAAc5D,MAGf,CAAC+C,IAUJ,OACE,sBAAKnI,UAAWE,IAAQkD,OAAxB,UACE,sBAAKpD,UAAWE,IAAQ+I,OAAxB,UACE,qDAC0B,KAAb,OAAZd,QAAY,IAAZA,OAAA,EAAAA,EAAcnD,QACb,wEAEA,6BAAKmD,OAGT,sBAAKnI,UAAWE,IAAQgJ,QAAxB,UACE,sDAC0B,IAAzBN,EAAc5D,OACb,uEAEA,oBAAIhF,UAAYC,OAA8B6C,EAApB5C,IAAQE,UAAlC,SACGwI,IAGL,wBACEO,SAAUP,EAAc5D,OAAS,EACjC3E,QA7ByB,WAC/BkB,GAAW,GACXW,YAAW,WACTgG,IACA3G,GAAW,KACV,MAyBGoE,SAAUjD,GAASW,EAAoB,KAAO,IAHhD,yCC1DO+F,MAxCf,WACE,MACEjI,qBAAWxB,GADL0D,EAAR,EAAQA,kBAAmBX,EAA3B,EAA2BA,MAAOuD,EAAlC,EAAkCA,oBAAqBoD,EAAvD,EAAuDA,SAAU3C,EAAjE,EAAiEA,cAAepD,EAAhF,EAAgFA,UAmBhF,OAfAlB,qBAAU,WAEN1B,SAASC,eAAe,SAAS2I,MAD/B5G,GAASW,EAC8B,iBAEA,kBAE1C,CAACX,EAAOW,IAEXjB,qBAAU,WACH6D,GAAwB5C,IAAqBgG,GAChD3C,MAGD,CAACT,EAAqB5C,EAAmBgG,IAG1C,qCACG/F,EACC,cAAC,EAAD,IAEA,GAEF,uBAAMtD,UAAWE,IAAQqJ,IAAzB,UACGlG,GAAqB,cAAC,EAAD,IACrBX,GAAS,cAAC,EAAD,IACV,cAAC,EAAD,IACA,cAAC8G,EAAD,IACA,iCACE,mBAAGC,KAAK,UAAR,6B,QC8EKC,EArHO,SAAC3J,GACrB,MAA4BuB,mBAAS,IAArC,mBAAO8B,EAAP,KAAeuG,EAAf,KACA,EAA0BrI,oBAAS,GAAnC,mBAAOoB,EAAP,KAAckH,EAAd,KACA,EAAkCtI,qBAAlC,mBAAOD,EAAP,KAAkBwI,EAAlB,KACA,EAAkDvI,oBAAS,GAA3D,mBAAO+B,EAAP,KAA0ByG,EAA1B,KACA,EAAsDxI,oBAAS,GAA/D,mBAAO2E,EAAP,KAA4B8D,EAA5B,KACA,EAAgCzI,oBAAS,GAAzC,mBAAO+H,EAAP,KAAiBW,EAAjB,KACA,EAAkC1I,oBAAS,GAA3C,mBAAOgC,EAAP,KAAkB2G,EAAlB,KAkEA7H,qBAAU,WACF8H,aAAaC,QAAQ,WACzBR,EAAUS,KAAKC,MAAMH,aAAaC,QAAQ,YAGZ,YAA5BtI,aAAaC,YACfgI,GAAqB,GAGS,YAA5BjI,aAAaC,YACfiI,GAAuB,GAGzBC,GAAY,KAEX,IAEH,IAAMM,EAAe,CACnBlH,SACAD,SAlFqB,SAACiC,GACtBuE,GAAU,SAACY,GACT,IAAMC,EAAa,sBACdD,GADc,cAGf1J,GACE0J,EAAWvF,OAAS,EAChB,EACAuF,EAAWA,EAAWvF,OAAS,GAAGnE,GAAK,GAC1CuE,KAIP,OADA8E,aAAaO,QAAQ,SAAUL,KAAKM,UAAUF,IACvCA,MAsET9H,QACAoE,UAjDgB,WAChB8C,GAAS,IAiDTxI,UA9CgB,WAChBwI,GAAS,IA8CTvI,YACAwF,gBApCsB,SAAC8D,GACvBd,EAAac,IAoCbtH,oBACA6C,sBA9C4B,WAC5B4D,GAAqB,IA8CrB7D,sBACAE,mBA5CyB,WACzB4D,GAAuB,IA4CvBV,WACAnB,aApE+B,WAC/ByB,GAAU,SAACY,GACT,IAAMC,EAAgBD,EAAW5B,QAC/B,SAACvD,GAAD,OAAW,IAAIzC,KAAKyC,EAAMxC,UAAY,IAAID,QAG5C,OADAuH,aAAaO,QAAQ,SAAUL,KAAKM,UAAUF,IACvCA,MA+DTzD,YA7EwB,SAAC6D,GACzBjB,GAAU,SAACY,GACT,IAAMC,EAAgBD,EAAW5B,QAAO,SAACvD,GAAD,OAAWA,EAAMvE,KAAO+J,KAEhE,OADAV,aAAaO,QAAQ,SAAUL,KAAKM,UAAUF,IACvCA,MA0ETlH,YACAmD,cArCoB,WACpBwD,GAAa,IAqCbvD,cA1CoB,WACpBuD,GAAa,KA4Cf,OACE,cAAC,EAAaY,SAAd,CAAuBC,MAAOR,EAA9B,SACGvK,EAAMgB,YC7GbP,IAASuK,OACL,cAAC,EAAD,UACE,cAAC,EAAD,MAEJrK,SAASC,eAAe,W","file":"static/js/main.4ac1ca88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"timers\":\"Timers_timers__2Vo0k\",\"appear\":\"Timers_appear__1xr_v\",\"active\":\"Timers_active__2r0g6\",\"event\":\"Timers_event__3p-wT\",\"info\":\"Timers_info__2xN4I\",\"name\":\"Timers_name__ZKxws\",\"date\":\"Timers_date__3F5wA\",\"countdown\":\"Timers_countdown__hMn9c\",\"expired\":\"Timers_expired__1OT_b\",\"disappear\":\"Timers_disappear__1DxJd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new-timer\":\"NewTimer_new-timer__1e5yW\",\"success\":\"NewTimer_success__e8PJQ\",\"error\":\"NewTimer_error__39kg1\",\"attention\":\"NewTimer_attention__2UxoF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1yEqW\",\"modal\":\"Modal_modal__2zwpN\",\"disappear\":\"Modal_disappear___4QyW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification-status\":\"NotificationStatus_notification-status__2Y9-y\",\"appear\":\"NotificationStatus_appear__1FtLB\",\"disappear\":\"NotificationStatus_disappear__3dq0w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__SVqVu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__2RMFl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification-request\":\"NotificationRequest_notification-request__215RE\"};","import React from \"react\";\r\n\r\nconst TimerContext = React.createContext();\r\n\r\nexport default TimerContext;\r\n","import classes from \"./Modal.module.css\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// add portals\r\n\r\nconst Backdrop = (props) => {\r\n  return (\r\n    <div\r\n      className={\r\n        !props.visible\r\n          ? `${classes.backdrop} ${classes.disappear}`\r\n          : classes.backdrop\r\n      }\r\n      onClick={props.backDropClick}\r\n    ></div>\r\n  );\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop\r\n          backDropClick={props.backDropClick}\r\n          visible={props.visible}\r\n        ></Backdrop>,\r\n        document.getElementById(\"modal\")\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <div\r\n          role=\"dialog\"\r\n          id=\"modal\"\r\n          aria-labelledby=\"modal_label\"\r\n          aria-modal=\"true\"\r\n          className={\r\n            !props.visible\r\n              ? `${classes.modal} ${classes.disappear}`\r\n              : classes.modal\r\n          }\r\n        >\r\n          {props.children}\r\n        </div>,\r\n        document.getElementById(\"modal\")\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport TimerContext from \"../store/timer-context\";\r\nimport Modal from \"./UI/Modal\";\r\nimport classes from \"./Alert.module.css\";\r\n\r\nconst audio = new Audio(\"beep-06.mp3\");\r\n\r\nconst Alert = () => {\r\n  const { hideAlert, lastEvent } = useContext(TimerContext);\r\n  const [visible, setVisible] = useState(true);\r\n  const notification = useRef();\r\n  const dismissRef = useRef();\r\n\r\n  const handleDismissAlert = useCallback(() => {\r\n    if (Notification.permission === \"granted\") {\r\n      notification.current.close();\r\n    }\r\n    setVisible(false);\r\n    const timeout = setTimeout(() => {\r\n      clearTimeout(timeout);\r\n      hideAlert();\r\n    }, 500);\r\n  }, [hideAlert]);\r\n\r\n  useEffect(() => {\r\n    audio.play();\r\n    if (Notification.permission === \"granted\") {\r\n      notification.current = new Notification(\"Event Countdown Timer\", {\r\n        body: `Event ${lastEvent.name} completed.`,\r\n      });\r\n      notification.current.onclose = () => {\r\n        handleDismissAlert();\r\n      };\r\n    }\r\n  }, [lastEvent, handleDismissAlert]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      dismissRef.current.focus()\r\n    }, 1)\r\n  })\r\n\r\n  return (\r\n    <Modal backDropClick={handleDismissAlert} visible={visible}>\r\n      <div className={classes.alert}>\r\n        <h3>Event Date Reached</h3>\r\n        <p>\r\n          Timer <span>{lastEvent.name}</span> complete at{\" \"}\r\n          <span>\r\n            {new Date(lastEvent.dateTime).toLocaleString(undefined, {\r\n              dateStyle: \"medium\",\r\n              timeStyle: \"short\",\r\n            })}\r\n          </span>\r\n          .\r\n        </p>\r\n        <button onClick={handleDismissAlert} ref={dismissRef}>Dismiss</button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import { useContext, useEffect, useRef, useState } from \"react\";\r\nimport TimerContext from \"../store/timer-context\";\r\nimport classes from \"./NewTimer.module.css\";\r\n\r\nconst NewTimer = () => {\r\n  const { addTimer, timers, alert, notificationModal, statusBar } =\r\n    useContext(TimerContext);\r\n  const [nameError, setNameError] = useState(false);\r\n  const [dateError, setDateError] = useState(false);\r\n  const [sameDateError, setSameDateError] = useState(false);\r\n  const [bringAttention, setBringAttention] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const nameRef = useRef();\r\n  const hasTried = useRef();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData(event.target);\r\n    const name = formData.get(\"name\");\r\n    const date = formData.get(\"date\");\r\n    let time = formData.get(\"time\");\r\n\r\n    let validName = false;\r\n    if (name.trim().length > 0 && name.trim().length < 50) {\r\n      validName = true;\r\n    } else {\r\n      setNameError(true);\r\n    }\r\n\r\n    if (time.trim().length < 1 || time.trim() < 1) {\r\n      time = \"00:00\";\r\n    }\r\n\r\n    const dateTime = `${date} ${time}`.trim();\r\n\r\n    let validDate = false;\r\n\r\n    if (!isNaN(new Date(dateTime)) && new Date(dateTime) > new Date()) {\r\n      const found = timers.find((timer) => {\r\n        return (\r\n          new Date(timer.dateTime).getTime() === new Date(dateTime).getTime()\r\n        );\r\n      });\r\n      if (!!found) {\r\n        setSameDateError(true);\r\n      } else {\r\n        validDate = true;\r\n      }\r\n    } else {\r\n      setDateError(true);\r\n    }\r\n\r\n    if (validName && validDate) {\r\n      addTimer({ name, dateTime });\r\n      event.target.reset();\r\n      nameRef.current.focus();\r\n      setSuccess(true);\r\n      setTimeout(() => {\r\n        setSuccess(false);\r\n      }, 1000);\r\n    } else {\r\n      if (!hasTried.current) {\r\n        hasTried.current = true;\r\n      } else {\r\n        setBringAttention(true);\r\n        setTimeout(() => {\r\n          setBringAttention(false);\r\n        }, 500);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleInputFocus = () => {\r\n    setNameError(false);\r\n    setDateError(false);\r\n    setSameDateError(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!alert && !notificationModal) {\r\n      setTimeout(() => {\r\n        nameRef.current.focus();\r\n      }, 1);\r\n    }\r\n  }, [alert, notificationModal, statusBar]);\r\n\r\n  return (\r\n    <div\r\n      className={[\r\n        classes[\"new-timer\"],\r\n        success ? classes.success : undefined,\r\n      ].join(\" \")}\r\n    >\r\n      <h2>Create New Event Timer</h2>\r\n      <form name=\"new-timer\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          id=\"name\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          placeholder=\"Name of the event\"\r\n          onFocus={handleInputFocus}\r\n          tabIndex={alert || notificationModal ? \"-1\" : \"0\"}\r\n          ref={nameRef}\r\n          autoComplete=\"off\"\r\n        />\r\n        {nameError && (\r\n          <div\r\n            className={[\r\n              classes.error,\r\n              bringAttention ? classes.attention : undefined,\r\n            ].join(\" \")}\r\n          >\r\n            Name can't be empty nor too long.\r\n          </div>\r\n        )}\r\n        <div>\r\n          <label htmlFor=\"date\">Date</label>\r\n          <input\r\n            id=\"date\"\r\n            name=\"date\"\r\n            type=\"date\"\r\n            onFocus={handleInputFocus}\r\n            tabIndex={alert || notificationModal ? \"-1\" : \"0\"}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"time\">Time</label>\r\n          <input\r\n            id=\"time\"\r\n            name=\"time\"\r\n            type=\"time\"\r\n            onFocus={handleInputFocus}\r\n            tabIndex={alert || notificationModal ? \"-1\" : \"0\"}\r\n            step=\"60\"\r\n          />\r\n        </div>\r\n        {dateError && (\r\n          <div\r\n            className={[\r\n              classes.error,\r\n              bringAttention ? classes.attention : undefined,\r\n            ].join(\" \")}\r\n          >\r\n            Date has to be set to the future.\r\n          </div>\r\n        )}\r\n        {sameDateError && (\r\n          <div\r\n            className={[\r\n              classes.error,\r\n              bringAttention ? classes.attention : undefined,\r\n            ].join(\" \")}\r\n          >\r\n            Can't set two events at the exactly the same time.\r\n          </div>\r\n        )}\r\n        <button\r\n          type=\"submit\"\r\n          tabIndex={alert || notificationModal ? \"-1\" : \"0\"}\r\n        >\r\n          {success ? \"Added\" : \"Start\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewTimer;\r\n","import { useContext, useEffect, useRef, useState } from \"react\";\r\nimport TimerContext from \"../store/timer-context\";\r\nimport Modal from \"./UI/Modal\";\r\nimport classes from \"./NotificationRequest.module.css\";\r\n\r\nconst NotificationRequest = () => {\r\n  const { notificationEnabled, hideNotificationModal, enableNotification } =\r\n    useContext(TimerContext);\r\n\r\n  const [visible, setVisible] = useState(true);\r\n  const [notificationDenied, setNotificationDenied] = useState(false);\r\n\r\n  const dismissRef = useRef();\r\n\r\n  const handleAllowNotification = () => {\r\n    Notification.requestPermission().then((permission) => {\r\n      if (permission === \"granted\") {\r\n        enableNotification();\r\n      }\r\n      if (permission === \"denied\") {\r\n        setNotificationDenied(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleHideNotificationRequest = () => {\r\n    setVisible(false);\r\n    setTimeout(() => {\r\n      hideNotificationModal();\r\n    }, 500);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      dismissRef.current.focus();\r\n    }, 1);\r\n  });\r\n\r\n  return (\r\n    <Modal visible={visible}>\r\n      <div className={classes[\"notification-request\"]}>\r\n        <h3>Notification Control</h3>\r\n        {!notificationEnabled && !notificationDenied ? (\r\n          <>\r\n            <p>\r\n              This app uses browser notifications to notify when an timer is\r\n              complete.\r\n            </p>\r\n            <p>Do you want to enable this feature?</p>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {!notificationEnabled && notificationDenied ? (\r\n          <>\r\n            <p>Ok! You won't receive browser notifications.</p>{\" \"}\r\n            <p>\r\n              If you change your mind, you can change the notification\r\n              permission in your browser settings.\r\n            </p>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {notificationEnabled && (\r\n          <>\r\n            <p>Notifications permissions were granted!</p>\r\n            <p>\r\n              You will receive a notification when an event timer is complete.\r\n            </p>\r\n          </>\r\n        )}\r\n        {!notificationEnabled && !notificationDenied ? (\r\n          <button onClick={handleAllowNotification}>Enable</button>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <button onClick={handleHideNotificationRequest} ref={dismissRef}>\r\n          Dismiss\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default NotificationRequest;\r\n","import { useContext, useState } from \"react\";\r\nimport TimerContext from \"../store/timer-context\";\r\nimport classes from \"./NotificationStatus.module.css\";\r\n\r\nconst NotificationStatus = () => {\r\n  const { enableNotification, hideStatusBar, showStatusBar } =\r\n    useContext(TimerContext);\r\n  const [visible, setVisible] = useState(true);\r\n\r\n  const handleAllowNotification = () => {\r\n    Notification.requestPermission().then((permission) => {\r\n      if (permission === \"granted\") {\r\n        setVisible(false);\r\n        setTimeout(() => {\r\n          enableNotification();\r\n        }, 500);\r\n      }\r\n      if (permission === \"denied\") {\r\n        alert(\r\n          \"Notifications are disabled. You can enable in your browser settings.\"\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleDisplayNotificationStatus = () => {\r\n    setVisible(false);\r\n    setTimeout(() => {\r\n      hideStatusBar();\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    showStatusBar && (\r\n      <div\r\n        className={`${classes[\"notification-status\"]} ${\r\n          !visible ? classes.disappear : undefined\r\n        }`}\r\n      >\r\n        <div>Notifications are disabled.</div>\r\n        <button onClick={handleAllowNotification}>Enable</button>\r\n        <button onClick={handleDisplayNotificationStatus}>Dismiss</button>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default NotificationStatus;\r\n","import { useContext, useState } from \"react\";\r\nimport TimerContext from \"../store/timer-context\";\r\nimport classes from \"./Timers.module.css\";\r\n\r\nconst Timer = (props) => {\r\n  const timeLeft = props.timeLeft;\r\n  const { handleLastEvent, showAlert, deleteTimer, notificationModal, alert } = useContext(TimerContext);\r\n\r\n  const [visible, setVisible] = useState(true);\r\n\r\n  let remainingTime = timeLeft;\r\n  let seconds = Math.floor(remainingTime % 60);\r\n  remainingTime = remainingTime / 60;\r\n  let minutes = Math.floor(remainingTime % 60);\r\n  remainingTime = remainingTime / 60;\r\n  let hours = Math.floor(remainingTime % 24);\r\n  remainingTime = remainingTime / 24;\r\n  let days = Math.floor(remainingTime);\r\n\r\n  // prepend zero\r\n  const pz = (number) => {\r\n    if (number < 10) {\r\n      return `0${number}`;\r\n    }\r\n    return number;\r\n  };\r\n\r\n  const timeLeftString = (\r\n    <>\r\n      {days > 0 ? (\r\n        <>\r\n          <span>{pz(days)}</span> days,{\" \"}\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {hours > 0 ? (\r\n        <>\r\n          <span>{pz(hours)}</span> hours,{\" \"}\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {minutes > 0 ? (\r\n        <>\r\n          <span>{pz(minutes)}</span> minutes,{\" \"}\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {seconds >= 0 ? (\r\n        <>\r\n          <span>{pz(seconds)}</span> seconds\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n\r\n  if (timeLeft < 1) {\r\n    let timeout = setTimeout(() => {\r\n      clearTimeout(timeout);\r\n      handleLastEvent(props);\r\n      showAlert();\r\n    }, 1000);\r\n  }\r\n\r\n  const handleDeleteTimer = () => {\r\n    setVisible(false);\r\n    setTimeout(() => {\r\n      deleteTimer(props.id);\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <li className={!visible ? classes.disappear : undefined}>\r\n      <div className={classes.event}>\r\n        <div className={classes.info}>\r\n          <div className={classes.name}>{props.name}</div>\r\n          <div className={classes.date}>\r\n            {new Date(props.dateTime).toLocaleString(undefined, {\r\n              month: \"short\",\r\n              year: \"numeric\",\r\n              day: \"2-digit\",\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n            })}\r\n          </div>\r\n        </div>\r\n        <button onClick={handleDeleteTimer} tabIndex={alert || notificationModal ? \"-1\" : \"0\"}>Delete</button>\r\n        <div className={classes.countdown}>{timeLeftString}</div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport TimerContext from \"../store/timer-context\";\r\nimport Timer from \"./Timer\";\r\nimport classes from \"./Timers.module.css\";\r\n\r\nconst ActiveTimers = () => {\r\n  const { timers, clearExpired, notificationModal, alert } = useContext(TimerContext);\r\n  const [activeTimers, setActiveTimers] = useState();\r\n  const [visible, setVisible] = useState(true);\r\n\r\n  const getTimeLeft = (timerDate) => {\r\n    return Math.floor((new Date(timerDate) - new Date()) / 1000);\r\n  };\r\n\r\n  const activeTimersArray = [...timers]\r\n    .sort((a, b) => (new Date(a.dateTime) < new Date(b.dateTime) ? -1 : 1))\r\n    .filter((timer) => getTimeLeft(timer.dateTime) > 0);\r\n\r\n  const expiredTimersArray = timers.filter(\r\n    (timer) => getTimeLeft(timer.dateTime) < 0\r\n  );\r\n\r\n  const expiredTimers = expiredTimersArray.reverse().map((timer) => {\r\n    return (\r\n      <li key={timer.id}>\r\n        <div className={classes.name}>{timer.name}</div>\r\n        <div className={classes.date}>\r\n          {new Date(timer.dateTime).toLocaleString(undefined, {\r\n            dateStyle: \"long\",\r\n            timeStyle: \"short\",\r\n          })}\r\n        </div>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  // add timer instantly\r\n  useEffect(() => {\r\n    setActiveTimers(\r\n      activeTimersArray.map((timer) => {\r\n        return (\r\n          <Timer\r\n            key={timer.id}\r\n            id={timer.id}\r\n            name={timer.name}\r\n            dateTime={timer.dateTime}\r\n            timeLeft={getTimeLeft(timer.dateTime)}\r\n          ></Timer>\r\n        );\r\n      })\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [timers]);\r\n\r\n  // update timers each 1s\r\n  useEffect(() => {\r\n    let timer;\r\n    if (!!activeTimers && activeTimers.length > 0) {\r\n      timer = setInterval(() => {\r\n        setActiveTimers(\r\n          activeTimersArray.map((timer) => {\r\n            return (\r\n              <Timer\r\n                key={timer.id}\r\n                id={timer.id}\r\n                name={timer.name}\r\n                dateTime={timer.dateTime}\r\n                timeLeft={getTimeLeft(timer.dateTime)}\r\n              ></Timer>\r\n            );\r\n          })\r\n        );\r\n      }, 1000);\r\n    }\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [activeTimers]);\r\n\r\n  const handleClearExpiredTimers = () => {\r\n    setVisible(false);\r\n    setTimeout(() => {\r\n      clearExpired();\r\n      setVisible(true);\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.timers}>\r\n      <div className={classes.active}>\r\n        <h2>Active Event Timers</h2>\r\n        {activeTimers?.length === 0 ? (\r\n          <p>Go ahead an add a timer for your event!</p>\r\n        ) : (\r\n          <ul>{activeTimers}</ul>\r\n        )}\r\n      </div>\r\n      <div className={classes.expired}>\r\n        <h2>Expired Event Timers</h2>\r\n        {expiredTimers.length === 0 ? (\r\n          <p>Expired event timers will appear here.</p>\r\n        ) : (\r\n          <ul className={!visible ? classes.disappear : undefined}>\r\n            {expiredTimers}\r\n          </ul>\r\n        )}\r\n        <button\r\n          disabled={expiredTimers.length < 1}\r\n          onClick={handleClearExpiredTimers}\r\n          tabIndex={alert || notificationModal ? \"-1\" : \"0\"}\r\n        >\r\n          Clear expired timers\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActiveTimers;\r\n","import { useContext, useEffect } from \"react\";\nimport classes from \"./App.module.css\";\nimport Alert from \"./components/Alert\";\nimport NewTimer from \"./components/NewTimer\";\nimport NotificationRequest from \"./components/NotificationRequest\";\nimport NotificationStatus from \"./components/NotificationStatus\";\nimport Timers from \"./components/Timers\";\nimport TimerContext from \"./store/timer-context\";\n\nfunction App() {\n  const { notificationModal, alert, notificationEnabled, isLoaded, showStatusBar, statusBar } =\n    useContext(TimerContext);\n\n  // attempt to prevent rendering an empty element\n  useEffect(() => {\n    if (alert || notificationModal) {\n      document.getElementById(\"modal\").style = \"display: block\";\n    } else {\n      document.getElementById(\"modal\").style = \"display: none\";\n    }\n  }, [alert, notificationModal]);\n\n  useEffect(() => {\n    if (!notificationEnabled && !notificationModal && isLoaded) {\n      showStatusBar();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [notificationEnabled, notificationModal, isLoaded])\n\n  return (\n    <>\n      {statusBar ? (\n        <NotificationStatus></NotificationStatus>\n      ) : (\n        \"\"\n      )}\n      <main className={classes.app}>\n        {notificationModal && <NotificationRequest></NotificationRequest>}\n        {alert && <Alert></Alert>}\n        <NewTimer></NewTimer>\n        <Timers></Timers>\n        <footer>\n          <a href=\"http://\">Source</a>\n        </footer>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import TimerContext from \"./timer-context\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst TimerProvider = (props) => {\r\n  const [timers, setTimers] = useState([]);\r\n  const [alert, setAlert] = useState(false);\r\n  const [lastEvent, setLastEvent] = useState();\r\n  const [notificationModal, setNotificationModal] = useState(false);\r\n  const [notificationEnabled, setNotificationEnabled] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [statusBar, setStatusBar] = useState(false);\r\n\r\n\r\n  const handleAddTimer = (timer) => {\r\n    setTimers((prevTimers) => {\r\n      const updatedTimers = [\r\n        ...prevTimers,\r\n        {\r\n          id:\r\n            prevTimers.length < 1\r\n              ? 0\r\n              : prevTimers[prevTimers.length - 1].id + 1,\r\n          ...timer,\r\n        },\r\n      ];\r\n      localStorage.setItem(\"timers\", JSON.stringify(updatedTimers));\r\n      return updatedTimers;\r\n    });\r\n  };\r\n\r\n  const handleDeleteTimer = (timerId) => {\r\n    setTimers((prevTimers) => {\r\n      const updatedTimers = prevTimers.filter((timer) => timer.id !== timerId);\r\n      localStorage.setItem(\"timers\", JSON.stringify(updatedTimers));\r\n      return updatedTimers;\r\n    });\r\n  };\r\n\r\n  const handleClearExpiredTimers = () => {\r\n    setTimers((prevTimers) => {\r\n      const updatedTimers = prevTimers.filter(\r\n        (timer) => new Date(timer.dateTime) > new Date()\r\n      );\r\n      localStorage.setItem(\"timers\", JSON.stringify(updatedTimers));\r\n      return updatedTimers;\r\n    });\r\n  };\r\n\r\n  const showAlert = () => {\r\n    setAlert(true);\r\n  };\r\n\r\n  const hideAlert = () => {\r\n    setAlert(false);\r\n  };\r\n\r\n  const hideNotificationModal = () => {\r\n    setNotificationModal(false);\r\n  };\r\n\r\n  const enableNotification = () => {\r\n    setNotificationEnabled(true);\r\n  };\r\n\r\n  const handleLastEvent = (eventId) => {\r\n    setLastEvent(eventId);\r\n  };\r\n\r\n  const showStatusBar = () => {\r\n    setStatusBar(true)\r\n  }\r\n\r\n  const hideStatusBar = () => {\r\n    setStatusBar(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!!localStorage.getItem(\"timers\")) {\r\n      setTimers(JSON.parse(localStorage.getItem(\"timers\")));\r\n    }\r\n\r\n    if (Notification.permission === \"default\") {\r\n      setNotificationModal(true);\r\n    }\r\n\r\n    if (Notification.permission === \"granted\") {\r\n      setNotificationEnabled(true);\r\n    }\r\n\r\n    setIsLoaded(true);\r\n\r\n  }, []);\r\n\r\n  const timerContext = {\r\n    timers,\r\n    addTimer: handleAddTimer,\r\n    alert,\r\n    showAlert,\r\n    hideAlert,\r\n    lastEvent,\r\n    handleLastEvent,\r\n    notificationModal,\r\n    hideNotificationModal,\r\n    notificationEnabled,\r\n    enableNotification,\r\n    isLoaded,\r\n    clearExpired: handleClearExpiredTimers,\r\n    deleteTimer: handleDeleteTimer,\r\n    statusBar,\r\n    hideStatusBar,\r\n    showStatusBar\r\n  };\r\n\r\n  return (\r\n    <TimerContext.Provider value={timerContext}>\r\n      {props.children}\r\n    </TimerContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TimerProvider;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport TimerProvider from \"./store/TimerProvider\";\n\nReactDOM.render(\n    <TimerProvider>\n      <App />\n    </TimerProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}