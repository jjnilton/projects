{"version":3,"sources":["App.js","index.js"],"names":["Main","styled","main","App","useState","randomNumber","setRandomNumber","minRef","useRef","maxRef","className","onSubmit","event","preventDefault","formData","FormData","target","formObj","keys","key","get","min","max","fraction","isNaN","current","value","Math","random","floor","getRandomNumber","id","htmlFor","ref","type","name","defaultValue","step","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAGMA,EAAOC,IAAOC,KAAV,o3CAiKKC,MAvFf,WACE,MAAwCC,qBAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAASC,mBACTC,EAASD,mBA+Bf,OACE,sBAAKE,UAAU,YAAf,UACE,eAACV,EAAD,WACE,yDACA,uBAAMW,SAjCS,SAACC,GACpBA,EAAMC,iBAEN,IAH8B,EAGxBC,EAAW,IAAIC,SAASH,EAAMI,QAC9BC,EAAU,GAJc,cAKZH,EAASI,QALG,IAK9B,2BAAmC,CAAC,IAAzBC,EAAwB,QACjCF,EAAQE,GAAOL,EAASM,IAAID,IANA,8BAS9B,IAAQE,EAAuBJ,EAAvBI,IAAKC,EAAkBL,EAAlBK,IAAKC,EAAaN,EAAbM,SAiBlBjB,EAfwB,SAACe,EAAKC,EAAKC,GAC7BC,MAAMH,KACRA,EAAM,EACNd,EAAOkB,QAAQC,MAAQ,GAGrBF,MAAMF,KACRA,EAAM,GACNb,EAAOgB,QAAQC,MAAQ,IAGzB,IAAMrB,EAAesB,KAAKC,WAAaN,GAAOD,KAAQA,EACtD,OAASE,EAAWlB,EAAesB,KAAKE,MAAMxB,GAGhCyB,CAAgBT,EAAKC,EAAKC,KAOtC,UACE,0BAASQ,GAAG,QAAZ,UACE,gCACE,uBAAOC,QAAQ,MAAf,iBACA,uBACED,GAAG,MACHE,IAAK1B,EACL2B,KAAK,SACLC,KAAK,MACLC,aAAc,EACdC,KAAK,WAGT,gCACE,uBAAOL,QAAQ,MAAf,iBACA,uBACED,GAAG,MACHE,IAAKxB,EACLyB,KAAK,SACLC,KAAK,MACLC,aAAc,GACdC,KAAK,WAGT,sBAAKN,GAAG,aAAR,UACE,qEACA,kGAGJ,yBAASA,GAAG,UAAZ,SACE,gCACE,uBAAOC,QAAQ,WAAf,mCACA,uBAAOE,KAAK,WAAWC,KAAK,WAAWJ,GAAG,kBAG9C,sBAAKA,GAAG,SAAR,UACE,yCACA,8BAAM1B,GAAgB,OAExB,0DAGJ,iCACE,mBAAGiC,KAAK,GAAR,0BCxJRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.de9129ff.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { useRef, useState } from \"react\";\r\n\r\nconst Main = styled.main`\r\n  min-width: 300px;\r\n  max-width: 600px;\r\n  padding: 10px;\r\n  margin: auto; \r\n  & h1 {\r\n    text-align: center;\r\n    color: #333;\r\n  }\r\n\r\n  & > form {\r\n    display: grid;\r\n    grid-template-rows: 1fr auto 0.75fr 0.25fr;\r\n\r\n    & > section#range {\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr;\r\n      background-color: #eee;\r\n      align-items: center;\r\n      justify-content: center;\r\n      gap: 10px;\r\n      padding: 10px;\r\n      border-radius: 5px;\r\n      margin: 10px 0;\r\n\r\n      & input {\r\n        width: 100%;\r\n        height: 3em;\r\n      }\r\n\r\n      &> div#how-to-use {\r\n        grid-column: 1 / -1;\r\n        font-size: 0.8em;\r\n        &> p {\r\n          margin: 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    & > section#options {\r\n      display: grid;\r\n      grid-template-columns: 1fr;\r\n    }\r\n\r\n    & > div#result {\r\n      background-color: #eee;\r\n      border-radius: 5px;\r\n      margin: 10px 0;\r\n      padding: 10px;\r\n      display: grid;\r\n      & > div:nth-child(2) {\r\n        font-size: 2em;\r\n        overflow: auto;\r\n      }\r\n    }\r\n\r\n    & > button {\r\n      color: white;\r\n      background-color: #0050fd;\r\n      border: none;\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n      transition: transform .2s;\r\n      &:hover {\r\n        transform: scale(1.05);\r\n      }\r\n\r\n      &:active {\r\n        background-color: #002d8d;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  const [randomNumber, setRandomNumber] = useState();\r\n  const minRef = useRef();\r\n  const maxRef = useRef();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData(event.target);\r\n    const formObj = {};\r\n    for (const key of formData.keys()) {\r\n      formObj[key] = formData.get(key);\r\n    }\r\n\r\n    const { min, max, fraction } = formObj;\r\n\r\n    const getRandomNumber = (min, max, fraction) => {\r\n      if (isNaN(min)) {\r\n        min = 0;\r\n        minRef.current.value = 0;\r\n      }\r\n\r\n      if (isNaN(max)) {\r\n        max = 10;\r\n        maxRef.current.value = 10;\r\n      }\r\n\r\n      const randomNumber = Math.random() * (+max - +min) + +min;\r\n      return !!fraction ? randomNumber : Math.floor(randomNumber);\r\n    };\r\n\r\n    setRandomNumber(getRandomNumber(min, max, fraction));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Main>\r\n        <h1>Random Number Generator</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <section id=\"range\">\r\n            <div>\r\n              <label htmlFor=\"min\">Min</label>\r\n              <input\r\n                id=\"max\"\r\n                ref={minRef}\r\n                type=\"number\"\r\n                name=\"min\"\r\n                defaultValue={0}\r\n                step=\"any\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"max\">Max</label>\r\n              <input\r\n                id=\"max\"\r\n                ref={maxRef}\r\n                type=\"number\"\r\n                name=\"max\"\r\n                defaultValue={10}\r\n                step=\"any\"\r\n              />\r\n            </div>\r\n            <div id=\"how-to-use\">\r\n              <p>Minimum Inlusive, Maximum Exclusive.</p>\r\n              <p>Example: 1 Min, 10 Max, possibilitiles include 1, 2...8, 9.</p>\r\n            </div>\r\n          </section>\r\n          <section id=\"options\">\r\n            <div>\r\n              <label htmlFor=\"fraction\">Decimal with fraction</label>\r\n              <input type=\"checkbox\" name=\"fraction\" id=\"fraction\" />\r\n            </div>\r\n          </section>\r\n          <div id=\"result\">\r\n            <div>Result</div>\r\n            <div>{randomNumber || 0}</div>\r\n          </div>\r\n          <button>Get new number</button>\r\n        </form>\r\n      </Main>\r\n      <footer>\r\n        <a href=\"\">Source</a>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}