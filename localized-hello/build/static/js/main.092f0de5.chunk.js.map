{"version":3,"sources":["components/Header.jsx","store/index.js","components/Login.jsx","components/Dashboard.jsx","components/LoggedOut.jsx","App.js","index.js"],"names":["StyledHeader","styled","header","Header","dataSlice","createSlice","name","initialState","value","isLoaded","hello","reducers","updateData","state","action","type","payload","status","loginSlice","loggedIn","language","username","loggedOut","login","logout","console","log","reset","actions","configureStore","reducer","data","LANGUAGES","StyledLogin","div","props","invalidInput","Login","dispatch","useDispatch","useState","setInvalidInput","supportedLanguages","map","toLocaleUpperCase","handleFocus","onSubmit","event","preventDefault","target","password","length","htmlFor","id","placeholder","onFocus","className","href","StyledDashboard","Dashboard","useSelector","useEffect","fetchData","a","fetchCountryCode","fetch","response","json","ipData","paramsObj","lang","cc","country_code","searchParams","URLSearchParams","fetchHello","toString","dataInfo","key","push","replace","dangerouslySetInnerHTML","__html","onClick","StyledLoggedOut","LoggedOut","setTimeout","App","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.092f0de5.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst StyledHeader = styled.header`\r\n  background-color: royalblue;\r\n  color: white;\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  margin-bottom: 15px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <StyledHeader>\r\n      <h1>Localized Hello with Geo-IP Data App</h1>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst dataSlice = createSlice({\r\n  name: \"data\",\r\n  initialState: {\r\n    value: [],\r\n    isLoaded: false,\r\n    hello: \"\",\r\n  },\r\n  reducers: {\r\n    updateData: (state, action) => {\r\n      if (action.type === \"RESET\") {\r\n        state.hello = { value: [], isLoaded: false, hello: \"\" };\r\n      } else {\r\n        state.value = action.payload.value;\r\n        state.isLoaded = action.payload.status;\r\n        state.hello = action.payload.hello;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nconst loginSlice = createSlice({\r\n  name: \"login\",\r\n  initialState: {\r\n    loggedIn: false,\r\n    language: \"\",\r\n    username: \"\",\r\n    loggedOut: false,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.loggedIn = true;\r\n      state.language = action.payload.language;\r\n      state.username = action.payload.username;\r\n      state.loggedOut = false;\r\n    },\r\n    logout: (state, action) => {\r\n      console.log(state.language);\r\n      state.loggedIn = false;\r\n      state.language = \"\";\r\n      state.loggedOut = true;\r\n    },\r\n    reset: (state) => {\r\n      state.loggedOut = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { updateData } = dataSlice.actions;\r\nexport const { login, logout, reset } = loginSlice.actions;\r\n\r\nexport default configureStore({\r\n  reducer: { data: dataSlice.reducer, login: loginSlice.reducer },\r\n});\r\n","import styled from \"styled-components\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../store\";\r\nimport { useState } from \"react\";\r\n\r\nconst LANGUAGES = [\r\n  \"ar\",\r\n  \"az\",\r\n  \"be\",\r\n  \"bg\",\r\n  \"bn\",\r\n  \"bs\",\r\n  \"cs\",\r\n  \"da\",\r\n  \"de\",\r\n  \"dz\",\r\n  \"el\",\r\n  \"en\",\r\n  \"en-gb\",\r\n  \"en-us\",\r\n  \"es\",\r\n  \"et\",\r\n  \"fa\",\r\n  \"fi\",\r\n  \"fil\",\r\n  \"fr\",\r\n  \"he\",\r\n  \"hi\",\r\n  \"hr\",\r\n  \"hu\",\r\n  \"hy\",\r\n  \"id\",\r\n  \"is\",\r\n  \"it\",\r\n  \"ja\",\r\n  \"ka\",\r\n  \"kk\",\r\n  \"km\",\r\n  \"ko\",\r\n  \"lb\",\r\n  \"lo\",\r\n  \"lt\",\r\n  \"lv\",\r\n  \"mk\",\r\n  \"mn\",\r\n  \"ms\",\r\n  \"my\",\r\n  \"ne\",\r\n  \"no\",\r\n  \"pl\",\r\n  \"pt\",\r\n  \"ro\",\r\n  \"ru\",\r\n  \"sk\",\r\n  \"sl\",\r\n  \"sq\",\r\n  \"sr\",\r\n  \"sv\",\r\n  \"sw\",\r\n  \"th\",\r\n  \"tk\",\r\n  \"uk\",\r\n  \"vi\",\r\n  \"zh\",\r\n];\r\n\r\nconst StyledLogin = styled.div`\r\n  background-color: lightblue;\r\n  border-radius: 5px;\r\n  min-width: 300px;\r\n  form {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    padding: 20px;\r\n    column-gap: 5px;\r\n    justify-content: center;\r\n    & > label {\r\n      grid-column: 1 / -1;\r\n    }\r\n    & > input {\r\n      grid-column: 1 / -1;\r\n    }\r\n    & > label:not(:first-child) {\r\n      margin-top: 5px;\r\n    }\r\n    & > input {\r\n      width: 100%;\r\n      height: 30px;\r\n      border: 2px solid ${(props) => (props.invalidInput ? \"red\" : \"royalblue\")};\r\n      border-radius: 5px;\r\n      padding: 0 5px;\r\n    }\r\n    & > div {\r\n      grid-column: 1 / -1;\r\n      justify-self: right;\r\n      display: flex;\r\n      flex-direction: column;\r\n      & > label[for=\"language\"] {\r\n        margin-top: 5px;\r\n        grid-column: 1 / -1;\r\n        font-size: 0.9em;\r\n      }\r\n      & > select#language {\r\n        margin-top: 5px;\r\n        padding: 5px;\r\n        grid-column: 1 / -1;\r\n      }\r\n    }\r\n\r\n    & > button,\r\n    a {\r\n      grid-column: 1 / -1;\r\n      justify-self: center;\r\n    }\r\n    & > button {\r\n      background-color: royalblue;\r\n      color: white;\r\n      border: none;\r\n      border-radius: 5px;\r\n      padding: 10px;\r\n      cursor: pointer;\r\n      margin-top: 10px;\r\n      width: 100px;\r\n    }\r\n    & > a {\r\n      margin-top: 20px;\r\n      font-size: 0.8em;\r\n      color: royalblue;\r\n    }\r\n    & .error-message {\r\n      grid-column: 1 / -1;\r\n      justify-self: center;\r\n      text-align: center;\r\n      color: red;\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const [invalidInput, setInvalidInput] = useState(false);\r\n\r\n  const supportedLanguages = LANGUAGES.map((language) => {\r\n    return <option key={language}>{language.toLocaleUpperCase()}</option>;\r\n  });\r\n\r\n  const handleLogin = (event) => {\r\n    event.preventDefault();\r\n\r\n    const username = event.target.username.value;\r\n    const password = event.target.password.value;\r\n    const language = event.target.language.value;\r\n\r\n    if (username.length > 0 && password.length > 0) {\r\n      dispatch(login({ language, username }));\r\n    } else {\r\n      setInvalidInput(true);\r\n    }\r\n  };\r\n\r\n  const handleFocus = () => {\r\n    setInvalidInput(false);\r\n  };\r\n\r\n  return (\r\n    <StyledLogin invalidInput={invalidInput}>\r\n      <form onSubmit={handleLogin}>\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          placeholder=\"Your username\"\r\n          onFocus={handleFocus}\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Your password\"\r\n          onFocus={handleFocus}\r\n        />\r\n        {invalidInput && (\r\n          <div className=\"error-message\">\r\n            Username and password can't be empty.\r\n          </div>\r\n        )}\r\n        <div>\r\n          <label htmlFor=\"language\">Language</label>\r\n          <select name=\"language\" id=\"language\">\r\n            <option value=\"\">Automatic</option>\r\n            {supportedLanguages}\r\n          </select>\r\n        </div>\r\n        <button>Login</button>\r\n        <a href=\"https://ok\">Forgot password</a>\r\n      </form>\r\n    </StyledLogin>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { logout, updateData } from \"../store\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst StyledDashboard = styled.div`\r\n  min-width: 280px;\r\n  div#hello {\r\n    font-size: 2em;\r\n    background-color: lightblue;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    text-align: center;\r\n    & > span:nth-child(2) {\r\n      color: royalblue;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n  div#data {\r\n    & > ul {\r\n      display: grid;\r\n      gap: 5px;\r\n      padding: 0;\r\n      & > li {\r\n        list-style: none;\r\n        background-color: lightblue;\r\n        display: grid;\r\n        border-radius: 5px;\r\n        grid-template-columns: minmax(100px, 0.3fr) 1fr;\r\n        & > span:first-child {\r\n          background-color: royalblue;\r\n          color: white;\r\n          height: 100%;\r\n          padding: 5px;\r\n          border-radius: 5px 0 0 5px;\r\n          text-align: center;\r\n          display: grid;\r\n          align-items: center;\r\n          text-transform: uppercase;\r\n        }\r\n        & > span:last-child {\r\n          word-break: break-all;\r\n          padding: 5px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  button {\r\n    background-color: orangered;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n    margin-top: 10px;\r\n    width: 100px;\r\n  }\r\n  #logout-message {\r\n    & > div:first-child {\r\n      font-size: 2em;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Dashboard = () => {\r\n  const data = useSelector((state) => state.data);\r\n  const username = useSelector((state) => state.login.username);\r\n  const language = useSelector((state) => state.login.language);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    dispatch(updateData({ type: \"RESET\" }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const fetchCountryCode = async () => {\r\n        const response = await fetch(\"https://freegeoip.app/json/2800:3f0:4001:810::200e\");\r\n        const ipData = await response.json();\r\n        return ipData;\r\n      };\r\n\r\n      const ipData = await fetchCountryCode();\r\n      const paramsObj = language\r\n        ? { lang: language }\r\n        : { cc: ipData.country_code };\r\n      const searchParams = new URLSearchParams(paramsObj);\r\n\r\n      const fetchHello = async () => {\r\n        const response = await fetch(\r\n          `https://fourtonfish.com/hellosalut/?${searchParams.toString()}`\r\n        );\r\n        const hello = await response.json();\r\n        dispatch(updateData({ value: ipData, status: true, hello: hello }));\r\n        return hello;\r\n      };\r\n\r\n      fetchHello();\r\n    };\r\n\r\n    fetchData();\r\n  }, [dispatch, language]);\r\n\r\n  const dataInfo = [];\r\n  for (const key in data.value) {\r\n    dataInfo.push(\r\n      <li key={key}>\r\n        <span>{key.replace(\"_\", \" \")}</span> <span>{data.value[key]}</span>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <StyledDashboard>\r\n      <>\r\n        {data.isLoaded ? (\r\n          <div id=\"hello\">\r\n            <span\r\n              dangerouslySetInnerHTML={{ __html: data?.hello?.hello }}\r\n            ></span>{\" \"}\r\n            <span>{username}</span>\r\n            <span>, you have successfully logged in!</span>\r\n          </div>\r\n        ) : (\r\n          <div>Loading...</div>\r\n        )}\r\n        <div id=\"data\">\r\n          <ul>{dataInfo}</ul>\r\n        </div>\r\n        <button onClick={handleLogout}>Logout</button>\r\n      </>\r\n    </StyledDashboard>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { reset } from \"../store\";\r\n\r\nconst StyledLoggedOut = styled.div`\r\n  div:first-child {\r\n    font-size: 2em;\r\n  }\r\n`;\r\n\r\nconst LoggedOut = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  setTimeout(() => {\r\n    dispatch(reset());\r\n  }, 3000);\r\n\r\n  return (\r\n    <StyledLoggedOut>\r\n      <div>Have a great day {props.username}!</div>\r\n      <div>Redirecting to login...</div>\r\n    </StyledLoggedOut>\r\n  );\r\n};\r\n\r\nexport default LoggedOut;\r\n","import { useSelector } from \"react-redux\";\nimport Header from \"./components/Header\";\nimport Login from \"./components/Login\";\nimport Dashboard from \"./components/Dashboard\";\nimport LoggedOut from \"./components/LoggedOut\";\n\n// const parseEntities = txt => new DOMParser().parseFromString(txt, 'text/html').body.innerText;\n\nfunction App() {\n  const loggedIn = useSelector((state) => state.login.loggedIn);\n  const loggedOut = useSelector((state) => state.login.loggedOut);\n  const username = useSelector((state) => state.login.username);\n\n  return (\n    <>\n      <div className=\"App\">\n        <Header></Header>\n        {loggedIn && !loggedOut && <Dashboard></Dashboard>}\n        {!loggedIn && !loggedOut && <Login></Login>}\n        {!loggedIn && loggedOut && <LoggedOut username={username}></LoggedOut>}\n      </div>\n      <footer><a href=\"https://\">Source</a></footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}